// Permutations
/* Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
 
Example 1:
Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]  */

class Solution
 {
    public:
    
    void perm(vector<int> num,int k,int n, vector<vector<int>> &res)
    {
        if (k==n)
        {
            res.push_back(num);
        }
        else
        {
            for (int i=k;i<=n;i++)
            {
                int tmp = num[k];
                num[k]=num[i];
                num[i]=tmp;
                
                perm(num,k+1,n,res);
                
                tmp = num[k];
                num[k]=num[i];
                num[i]=tmp;
            }
        }
    }

    vector<vector<int> > permute(vector<int> &num)
    {
        vector<vector<int> > res;
        perm(num,0,(num.size()-1),res);
        return res;
    }
};
