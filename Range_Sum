/* Problem 
You are given an array of N integers.
You have to answer Q queries.
Each query contains two integers L and R
For each query print the sum of integers in array from index L to R
Input :
First line will contain an integer T (number of test cases).
T blocks of line follows.
First line of each block contains an integer N (number of array elements).
Next line contains N integers (array elements).
Next line contains an integer Q (number of queries).
Next Q lines contain two integers L and R
Ouput :
Print required answer for each query
Constraints:
1<=T<=10
1<=N<=10^5
0<=a[i]<=10^9
1<=Q<=10^5
1<=L<=R<=N
Sample Input
2
4
10 20 30 40
2
1 4
2 3
5
1 1 1 1 1
3
1 2
2 5
5 5
Sample Output
100
50
2
4
1  */

// range sum using prefixsum

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main()
{
    
    int t, i;
    cout<<"Enter How many test cases :"<<endl;;
    cin>>t;
    
    while(t--)  // run t test cases
    {
        int n;
        
        cin>>n;
        
        long long int arr[n];  // craete array with size namespace
        
        long long int prefix[n]={0};  // take prefix array with size namespace
        
        for(i=1;i<=n;i++)
        {
            cin>>arr[i];        
            prefix[i]=prefix[i-1]+arr[i];
        }
        
        int Q;
        
        cin>>Q;
        
        while(Q--)
        {
            int L, R;
        
            cin>>L>>R;
            
            cout<<prefix[R]-prefix[L-1];
            
        }
        
        
        
    }
    
    
    return 0;
}
