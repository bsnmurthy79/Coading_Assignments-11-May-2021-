/* Longest Span in two Binary Arrays
Given two binary arrays arr1[] and arr2[] of same size N. Find length of the longest common span [i, j] where j>=i such that arr1[i] + arr1[i+1] + …. + arr1[j] = arr2[i] + arr2[i+1] + …. + arr2[j]. 

Input:
N = 6
Arr1[] = {0, 1, 0, 0, 0, 0}
Arr2[] = {1, 0, 1, 0, 0, 1}
Output: 4
Explanation: The longest span with same
sum is from index 1 to 4 following zero 
based indexing.  */

#include <iostream>
#include <unordered_map>
using namespace std;
class Solution
{
    public:
    
        int longestCommonSum(bool arr1[], bool arr2[], int n)
        {
            int prefix[n];
            
            for(int i=0;i<n;i++)
            {
                prefix[i]=arr1[i]-arr2[i];
            }
            unordered_map<int, int>dic;
            int sum=0, maxi=0;
            
            for(int i=0;i<n;i++)
            {
                sum+=prefix[i];
                
                if(sum==0)
                {
                    maxi=i+1;
                }
                else if(dic.find(sum-0)!=dic.end())
                {
                    maxi=max(maxi, i-dic[sum-0]);
                }
                else
                {
                    dic[sum]=i;
                }
            }
        return maxi;
        }
    
};
int main()
{
    int t,n;
    
    cin>>t;
    while(t--)
    {
        cin>>n;
        
        bool arr1[n], arr2[n];
        for(int i=0;i<n;i++)
            cin>>arr1[i];
            
        for(int i=0;i<n;i++)
            cin>>arr2[i];
        
        Solution ob;
        auto ans=ob.longestCommonSum(arr1, arr2, n);
            cout<<ans;
    }

    return 0;
}

/* 
1                                                                                                                                                        
6                                                                                                                                                        
0 1 0 0 0 0                                                                                                                                              
1 0 1 0 0 1                                                                                                                                              
4  */
