// Next Greater Element I
/* You are given two integer arrays nums1 and nums2 both of unique elements, where nums1 is a subset of nums2.

Find all the next greater numbers for nums1's elements in the corresponding places of nums2.

The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, return -1 for this number.

 Example 1:

Input: nums1 = [4,1,2], nums2 = [1,3,4,2]
Output: [-1,3,-1]
Explanation:
For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
For number 1 in the first array, the next greater number for it in the second array is 3.
For number 2 in the first array, there is no next greater number for it in the second array, so output -1.
Example 2:
*/


#include<bits/stdc++.h>
#include<iostream>
using namespace std;
int n1, n2;
class Solution 
{
    public:
    
    void  nextGreaterElement(int nums1[], int nums2[]) 
    {
        int ans[n1];
        for(int i=0;i<n1;i++)
        {
            int num = nums1[i];
            int j = 0;
            int flag = 0;
            while(nums2[j] != num) j++;
            for(int k = j; k<n2; k++)
            {
                if(nums2[k] > num) 
                {
                    ans[i] = nums2[k];
                    cout<<ans[i]<<" ";
                    flag = 1;
                    break;
                }
            }
            
            if(flag == 0) 
              //ans[i] = -1;
              cout<<-1<<" ";
        }
        //return ans;
    }

};

int main()
{
    Solution s;
    
    cin>>n1>>n2;
    int num1[n1];
    int num2[n2];
    for(int i=0;i<n1;i++)
     cin>>num1[i];
     
    for(int i=0;i<n2;i++)
     cin>>num2[i];
        
    
    s.nextGreaterElement(num1, num2);
    return 0;
}

