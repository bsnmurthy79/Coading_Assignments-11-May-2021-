// Dynamic Programming(DP) to find FACTORIAL VALUE OF GIVEN NOS 
/*
DP[0]=1
DP[1] = 1 * DP[0] --> 1 (DP[I] = I * DP[I-1]


INPUT : 
N=3
5  -> 120
6 -> 720
30 -> 109361473  */

           // factorial using  DYNAMIC PROGRAMMING 

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int N=100001;
long long int dp[100001]={0};
int mod=1e9+7;

void series_fact()
{
    dp[0]=1;
    for(int i=1;i<=N;i++)
    {
        dp[i]= ( i%mod * dp[i-1]%mod) % mod;
    }
    
}

int main()
{
    series_fact();
    int n;
    cin>>n;
    
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        cout<<dp[x]<<endl;
    }
    return 0;
}
 
