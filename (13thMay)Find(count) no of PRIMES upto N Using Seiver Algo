  
     // Number of Primes upto n using Seiver algorithm
     /* Problem
Given a number N, find number of primes in the range .

Input:
The only line of input consists of a number N.

Output:
Print the number of primes in the range .

Constraints: 1<=N<=1000000

*/

/* input  10
output: 4
(2 3 5 7 total 4 primes until 10) */

#include <iostream>

using namespace std;
long long int N=1000000;
long long int seive[1000000];

void gen_seive()
{
    for(int i=0;i<N;i++)
    {
        seive[i]=1;
    }
    seive[0]=seive[1]=0;
    
    for(int i=2;i*i<N;i++)
    {
        if(seive[i]==1)
        {
            for(int j=i*i; j<=N;j+=i)
            {
                seive[j]=0;
            }
        }
    }
    /*for(int i=0;i<N;i++)
    {
        cout<<i<<" "<<seive[i]<<endl;
    }*/
    
}


int main()
{
    gen_seive(); // call seive here
    
    int n;
    
    cin>>n;
    if (n>=1 && n<=1000000)
    {
        int count=0;
        for(int i=2;i<=n;i++)
        {
            if(seive[i]==1)
             {
                count++;
            }
        }
       cout<<count;
    }
    return 0;
    
}


