/* Maximum XOR subarray 
Given an array of integers of size N find subarray with maximum xor. A subbarray is a contiguous part of array.


Example 1:

Input:
N = 4
arr[] = {1,2,3,4}
Output: 7
Explanation: 
The subarray {3,4} has maximum xor 
value equal to 7.

Constraints:
1 <= N <= 105
1 <= arr[i] <= 105
*/


#include <iostream>
#include <bits/stdc++.h>
using namespace std;

class Solution
{
    public:
        long long int maxSubarrayXOR(long long int N, long long int arr[])
        {
            long long int max=0;
            for(int i=0;i<N-1;i++)
            {
                arr[i]=arr[i]^arr[i+1];
                if(arr[i]>max)
                {
                   max=arr[i];
                }
            }
             arr[N-1]=arr[N-1];
             if(arr[N-1]>max)
             {
                max=arr[N-1];
             }
            return max;
        }
};

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        long long int N;
        cin>>N;
        
        long long int arr[N];
    
        for(int i=0;i<N;i++)
            cin>>arr[i];
        
        Solution ob;
          cout<<ob.maxSubarrayXOR(N, arr)<<endl;
    
        
    }
    return 0;
}
